import sqlite3

import pandas as pd
import yfinance as yf

bt_inputs = {
    # S&P 500 tickers
    "tickers": [
        "MMM",
        "AOS",
        "ABT",
        "ABBV",
        "ABMD",
        "ACN",
        "ATVI",
        "ADM",
        "ADBE",
        "ADP",
        "AAP",
        "AES",
        "AFL",
        "A",
        "AIG",
        "APD",
        "AKAM",
        "ALK",
        "ALB",
        "ARE",
        "ALGN",
        "ALLE",
        "LNT",
        "ALL",
        "GOOGL",
        "GOOG",
        "MO",
        "AMZN",
        "AMCR",
        "AMD",
        "AEE",
        "AAL",
        "AEP",
        "AXP",
        "AMT",
        "AWK",
        "AMP",
        "ABC",
        "AME",
        "AMGN",
        "APH",
        "ADI",
        "ANSS",
        "ANTM",
        "AON",
        "APA",
        "AAPL",
        "AMAT",
        "APTV",
        "ANET",
        "AIZ",
        "T",
        "ATO",
        "ADSK",
        "AZO",
        "AVB",
        "AVY",
        "BKR",
        "BLL",
        "BAC",
        "BBWI",
        "BAX",
        "BDX",
        "WRB",
        "BRK.B",
        "BBY",
        "BIO",
        "TECH",
        "BIIB",
        "BLK",
        "BK",
        "BA",
        "BKNG",
        "BWA",
        "BXP",
        "BSX",
        "BMY",
        "AVGO",
        "BR",
        "BRO",
        "BF.B",
        "CHRW",
        "CDNS",
        "CZR",
        "CPB",
        "COF",
        "CAH",
        "KMX",
        "CCL",
        "CARR",
        "CTLT",
        "CAT",
        "CBOE",
        "CBRE",
        "CDW",
        "CE",
        "CNC",
        "CNP",
        "CDAY",
        "CERN",
        "CF",
        "CRL",
        "SCHW",
        "CHTR",
        "CVX",
        "CMG",
        "CB",
        "CHD",
        "CI",
        "CINF",
        "CTAS",
        "CSCO",
        "C",
        "CFG",
        "CTXS",
        "CLX",
        "CME",
        "CMS",
        "KO",
        "CTSH",
        "CL",
        "CMCSA",
        "CMA",
        "CAG",
        "COP",
        "ED",
        "STZ",
        "CEG",
        "COO",
        "CPRT",
        "GLW",
        "CTVA",
        "COST",
        "CTRA",
        "CCI",
        "CSX",
        "CMI",
        "CVS",
        "DHI",
        "DHR",
        "DRI",
        "DVA",
        "DE",
        "DAL",
        "XRAY",
        "DVN",
        "DXCM",
        "FANG",
        "DLR",
        "DFS",
        "DISCA",
        "DISCK",
        "DISH",
        "DIS",
        "DG",
        "DLTR",
        "D",
        "DPZ",
        "DOV",
        "DOW",
        "DTE",
        "DUK",
        "DRE",
        "DD",
        "DXC",
        "EMN",
        "ETN",
        "EBAY",
        "ECL",
        "EIX",
        "EW",
        "EA",
        "EMR",
        "ENPH",
        "ETR",
        "EOG",
        "EPAM",
        "EFX",
        "EQIX",
        "EQR",
        "ESS",
        "EL",
        "ETSY",
        "RE",
        "EVRG",
        "ES",
        "EXC",
        "EXPE",
        "EXPD",
        "EXR",
        "XOM",
        "FFIV",
        "FDS",
        "FAST",
        "FRT",
        "FDX",
        "FITB",
        "FRC",
        "FE",
        "FIS",
        "FISV",
        "FLT",
        "FMC",
        "F",
        "FTNT",
        "FTV",
        "FBHS",
        "FOXA",
        "FOX",
        "BEN",
        "FCX",
        "AJG",
        "GRMN",
        "IT",
        "GE",
        "GNRC",
        "GD",
        "GIS",
        "GPC",
        "GILD",
        "GL",
        "GPN",
        "GM",
        "GS",
        "GWW",
        "HAL",
        "HIG",
        "HAS",
        "HCA",
        "PEAK",
        "HSIC",
        "HSY",
        "HES",
        "HPE",
        "HLT",
        "HOLX",
        "HD",
        "HON",
        "HRL",
        "HST",
        "HWM",
        "HPQ",
        "HUM",
        "HBAN",
        "HII",
        "IEX",
        "IDXX",
        "INFO",
        "ITW",
        "ILMN",
        "INCY",
        "IR",
        "INTC",
        "ICE",
        "IBM",
        "IP",
        "IPG",
        "IFF",
        "INTU",
        "ISRG",
        "IVZ",
        "IPGP",
        "IQV",
        "IRM",
        "JBHT",
        "JKHY",
        "J",
        "JNJ",
        "JCI",
        "JPM",
        "JNPR",
        "K",
        "KEY",
        "KEYS",
        "KMB",
        "KIM",
        "KMI",
        "KLAC",
        "KHC",
        "KR",
        "LHX",
        "LH",
        "LRCX",
        "LW",
        "LVS",
        "LDOS",
        "LEN",
        "LLY",
        "LNC",
        "LIN",
        "LYV",
        "LKQ",
        "LMT",
        "L",
        "LOW",
        "LUMN",
        "LYB",
        "MTB",
        "MRO",
        "MPC",
        "MKTX",
        "MAR",
        "MMC",
        "MLM",
        "MAS",
        "MA",
        "MTCH",
        "MKC",
        "MCD",
        "MCK",
        "MDT",
        "MRK",
        "FB",
        "MET",
        "MTD",
        "MGM",
        "MCHP",
        "MU",
        "MSFT",
        "MAA",
        "MRNA",
        "MHK",
        "TAP",
        "MDLZ",
        "MPWR",
        "MNST",
        "MCO",
        "MS",
        "MOS",
        "MSI",
        "MSCI",
        "NDAQ",
        "NTAP",
        "NFLX",
        "NWL",
        "NEM",
        "NWSA",
        "NWS",
        "NEE",
        "NLSN",
        "NKE",
        "NI",
        "NDSN",
        "NSC",
        "NTRS",
        "NOC",
        "NLOK",
        "NCLH",
        "NRG",
        "NUE",
        "NVDA",
        "NVR",
        "NXPI",
        "ORLY",
        "OXY",
        "ODFL",
        "OMC",
        "OKE",
        "ORCL",
        "OGN",
        "OTIS",
        "PCAR",
        "PKG",
        "PARA",
        "PH",
        "PAYX",
        "PAYC",
        "PYPL",
        "PENN",
        "PNR",
        "PBCT",
        "PEP",
        "PKI",
        "PFE",
        "PM",
        "PSX",
        "PNW",
        "PXD",
        "PNC",
        "POOL",
        "PPG",
        "PPL",
        "PFG",
        "PG",
        "PGR",
        "PLD",
        "PRU",
        "PEG",
        "PTC",
        "PSA",
        "PHM",
        "PVH",
        "QRVO",
        "PWR",
        "QCOM",
        "DGX",
        "RL",
        "RJF",
        "RTX",
        "O",
        "REG",
        "REGN",
        "RF",
        "RSG",
        "RMD",
        "RHI",
        "ROK",
        "ROL",
        "ROP",
        "ROST",
        "RCL",
        "SPGI",
        "CRM",
        "SBAC",
        "SLB",
        "STX",
        "SEE",
        "SRE",
        "NOW",
        "SHW",
        "SBNY",
        "SPG",
        "SWKS",
        "SJM",
        "SNA",
        "SEDG",
        "SO",
        "LUV",
        "SWK",
        "SBUX",
        "STT",
        "STE",
        "SYK",
        "SIVB",
        "SYF",
        "SNPS",
        "SYY",
        "TMUS",
        "TROW",
        "TTWO",
        "TPR",
        "TGT",
        "TEL",
        "TDY",
        "TFX",
        "TER",
        "TSLA",
        "TXN",
        "TXT",
        "TMO",
        "TJX",
        "TSCO",
        "TT",
        "TDG",
        "TRV",
        "TRMB",
        "TFC",
        "TWTR",
        "TYL",
        "TSN",
        "UDR",
        "ULTA",
        "USB",
        "UAA",
        "UA",
        "UNP",
        "UAL",
        "UNH",
        "UPS",
        "URI",
        "UHS",
        "VLO",
        "VTR",
        "VRSN",
        "VRSK",
        "VZ",
        "VRTX",
        "VFC",
        "VTRS",
        "V",
        "VNO",
        "VMC",
        "WAB",
        "WMT",
        "WBA",
        "WM",
        "WAT",
        "WEC",
        "WFC",
        "WELL",
        "WST",
        "WDC",
        "WRK",
        "WY",
        "WHR",
        "WMB",
        "WTW",
        "WYNN",
        "XEL",
        "XYL",
        "YUM",
        "ZBRA",
        "ZBH",
        "ZION",
        "ZTS",
    ],
    "start_date": "2020-01-01",
    "end_date": "2022-01-03",
}

# create a sql connection
con = sqlite3.connect("stock.db")
c = con.cursor()

# create price table
query1 = """CREATE TABLE IF NOT EXISTS prices (
Date TEXT NOT NULL,
ticker TEXT NOT NULL,
price REAL,
PRIMARY KEY(Date, ticker)
)"""

c.execute(query1.replace("\n", " "))

# create volume table
query2 = """CREATE TABLE IF NOT EXISTS volume (
Date TEXT NOT NULL,
ticker TEXT NOT NULL,
volume REAL,
PRIMARY KEY(Date, ticker)
)"""

c.execute(query2.replace("\n", " "))


def download(bt_inputs, proxy=None):
    data = yf.download(
        tickers=bt_inputs["tickers"],
        start=bt_inputs["start_date"],
        end=bt_inputs["end_date"],
        interval="1d",
        prepost=True,
        threads=True,
        proxy=proxy,
    )

    return data


test = download(bt_inputs)

adj_close = test["Adj Close"]

volume = test["Volume"]

adj_close_long = pd.melt(
    adj_close.reset_index(),
    id_vars="Date",
    value_vars=bt_inputs["tickers"],
    var_name="ticker",
    value_name="price",
)

volume_long = pd.melt(
    volume.reset_index(),
    id_vars="Date",
    value_vars=bt_inputs["tickers"],
    var_name="ticker",
    value_name="volume",
)

adj_close_long.to_sql("prices", con, if_exists="append", index=False)

volume_long.to_sql("volume", con, if_exists="append", index=False)
